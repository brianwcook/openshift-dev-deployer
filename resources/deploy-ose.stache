#!/bin/bash

#================
# OSE 3.2 all in one
#================

{
set -x #echo on

# cloud-init env doesn't seem to have $HOME
export HOME=/root

# Make sure only root can run our script
if [[ $EUID -ne 0 ]]; then
   echo "This script must be run as root" 1>&2
   exit 1
fi

mkdir /root/deploy-ose

echo "{{git_ssh_key}}" > /root/deploy-ose/ssh-priv-key
chmod 600  /root/deploy-ose/ssh-priv-key

subscription-manager register --username {{rh_id}} --password {{rh_password}}
subscription-manager attach --pool={{reg_pool}}
subscription-manager repos --enable rhel-7-server-optional-rpms
subscription-manager repos --enable=rhel-server-rhscl-7-rpms
subscription-manager repos --enable=rhel-7-server-extras-rpms

yum -y install nano git yum-utils scl-utils httpd-tools wget svn
yum -y install docker-1.9.1-40.el7.x86_64

# setup docker storage
DEVS="/dev/xvdb" VG="docker-data" docker-storage-setup

# Mount registry storage
vgcreate registry /dev/xvdc
lvcreate -l 100%FREE -n data registry
mkfs.xfs /dev/registry/data
mkdir -p /opt/openshift-registry/docker/registry
echo '/dev/registry/data /opt/openshift-registry/docker/registry/  xfs  defaults  0 0 ' |  tee --append /etc/fstab
mount -a

echo "INSECURE_REGISTRY='--insecure-registry 0.0.0.0/0'" >> /etc/sysconfig/docker

systemctl start rhel-push-plugin
systemctl start docker --ignore-dependencies
systemctl enable docker.service

# run open shift
 docker run -d --name "ose" --privileged --pid=host --net=host -v \
 /:/rootfs:ro -v /var/run:/var/run:rw -v /sys:/sys -v \
 /var/lib/docker:/var/lib/docker:rw  \
 -v /var/lib/origin/openshift.local.volumes:/var/lib/origin/openshift.local.volumes \
 openshift3/ose start \
 --public-master=$(curl -s  http://169.254.169.254/latest/meta-data/public-hostname)

# setup the registry storage mount permissions:
chcon -Rt svirt_sandbox_file_t /opt/openshift-registry
chown -R 1001.root /opt/openshift-registry


# wait for openshift to start..
sleep 15

# make root on host system admin for openshift
mkdir /root/.kube
docker cp ose:/var/lib/origin/openshift.local.config/master/admin.kubeconfig /root/.kube/config
export KUBECONFIG=/root/.kube/config

htpasswd -cb ose-htpasswd admin '{{ose_admin_password}}'
docker cp ose-htpasswd ose:/root/ose-htpasswd

# copy the oc binary to the ec2 host
docker cp ose:/usr/bin/oc /usr/bin/oc

#docker exec -it ose bash
docker exec ose /bin/bash -c \
   "oc project default; \
   oadm registry --config=/var/lib/origin/openshift.local.config/master/admin.kubeconfig --service-account=registry --mount-host=/opt/openshift-registry; \
   oadm policy add-scc-to-user privileged system:serviceaccount:default:registry; \
   oc policy add-role-to-user system:image-pusher builder; \
   oc project default; \
   oc create serviceaccount router -n default; \
   oadm policy add-scc-to-user privileged system:serviceaccount:default:router; \
   oadm router router --replicas=1  --service-account=router; \
   oc expose service docker-registry --hostname r.$(curl -s  http://169.254.169.254/latest/meta-data/public-ipv4).xip.io"


# setup htaccess authentication
# make 'admin' cluster administrator

docker exec ose /bin/bash -c \
   "oadm policy add-cluster-role-to-user cluster-admin admin; \
   openshift start --write-config=/var/lib/origin/openshift.local.config; \
   sed -i 's/    name: anypassword/    name: htpasswd_provider/' /var/lib/origin/openshift.local.config/master/master-config.yaml; \
   sed -i 's/      kind: AllowAllPasswordIdentityProvider/      kind: HTPasswdPasswordIdentityProvider\n      file: \/root\/ose-htpasswd/'  /var/lib/origin/openshift.local.config/master/master-config.yaml"

sleep 2
docker stop ose
sleep 5
docker start ose
# wait for ose to start again
sleep 15

# add the github ssh fingerprint to known_hosts
touch /root/.ssh/known_hosts
ssh-keyscan github.com >> /root/.ssh/known_hosts
chmod 600 /root/.ssh/known_hosts

# login
/bin/bash -c \
  "oc login --insecure-skip-tls-verify=true -u admin -p {{ose_admin_password}} localhost"

# until [ -e /root/.kube/config ]; do
#  oc login --insecure-skip-tls-verify=true -u admin -p {{ose_admin_password}} localhost
#  sleep 2
# done

# setup imagestreams
cd /root/deploy-ose
wget https://raw.githubusercontent.com/openshift/origin/master/examples/image-streams/image-streams-rhel7.json
svn export https://github.com/openshift/origin/trunk/examples/db-templates

echo "{{import_is_b64}}" > /root/deploy-ose/import-is.b64

cd ~
base64 -d /root/deploy-ose/import-is.b64 > /root/deploy-ose/import-is.sh
docker exec ose /bin/bash -c "sh /rootfs/root/deploy-ose/import-is.sh"

echo "{{user_script_b64}}" > /root/deploy-ose/user-script.b64
base64 -d /root/deploy-ose/user-script.b64 >  /root/deploy-ose/user-script.sh
rm -f /root/deploy-ose/user-script.b64

# make admin pwd available to user script as env variable
# NOT WORKNG :(
export ADMIN_PASSWORD={{ose_admin_password}}

# run optional script
# three brackets turns off escaping so quotes are sent properly
{{{ user_script_exec}}}

} > ~/cloud-init.out 2>&1
